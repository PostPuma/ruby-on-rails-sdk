=begin
PostPuma - OpenAPI 3.0

PostPuma API specifications

The version of the OpenAPI document: 1.0.0
Contact: support@postpuma.com
Generated by: https://github.com/openapitools/openapi-generator.git

=end

class InitTables < ActiveRecord::Migration
  def change
    create_table "account".pluralize.to_sym, id: false do |t|
      t.integer :id
      t.string :uuid
      t.string :name
      t.string :username
      t.string :provider
      t.string :data
      t.boolean :authorized
      t.string :created_at

      t.timestamps
    end

    create_table "account_data".pluralize.to_sym, id: false do |t|
      t.string :union_id
      t.boolean :is_private
      t.boolean :duet_disabled
      t.string :privacy_levels
      t.boolean :stitch_disabled
      t.boolean :comment_disabled
      t.integer :max_video_post_duration_sec

      t.timestamps
    end

    create_table "create_post_request".pluralize.to_sym, id: false do |t|
      t.string :date
      t.string :time
      t.string :timezone
      t.boolean :schedule
      t.boolean :schedule_now
      t.boolean :queue
      t.string :accounts
      t.string :tags
      t.string :versions

      t.timestamps
    end

    create_table "create_tag_request".pluralize.to_sym, id: false do |t|
      t.string :name
      t.string :hex_color

      t.timestamps
    end

    create_table "delete_media_files_200_response".pluralize.to_sym, id: false do |t|
      t.boolean :success

      t.timestamps
    end

    create_table "delete_media_files_request".pluralize.to_sym, id: false do |t|
      t.string :items

      t.timestamps
    end

    create_table "delete_post_request".pluralize.to_sym, id: false do |t|
      t.boolean :trash

      t.timestamps
    end

    create_table "delete_posts_200_response".pluralize.to_sym, id: false do |t|
      t.boolean :deleted
      t.boolean :to_trash

      t.timestamps
    end

    create_table "delete_posts_200_response_one_of".pluralize.to_sym, id: false do |t|
      t.boolean :deleted

      t.timestamps
    end

    create_table "delete_posts_200_response_one_of_1".pluralize.to_sym, id: false do |t|
      t.boolean :to_trash

      t.timestamps
    end

    create_table "delete_posts_request".pluralize.to_sym, id: false do |t|
      t.string :posts
      t.boolean :trash

      t.timestamps
    end

    create_table "list_accounts_200_response".pluralize.to_sym, id: false do |t|
      t.string :data

      t.timestamps
    end

    create_table "list_media_files_200_response".pluralize.to_sym, id: false do |t|
      t.string :data

      t.timestamps
    end

    create_table "list_posts_200_response".pluralize.to_sym, id: false do |t|
      t.string :data

      t.timestamps
    end

    create_table "list_tags_200_response".pluralize.to_sym, id: false do |t|
      t.Object :data

      t.timestamps
    end

    create_table "media_file".pluralize.to_sym, id: false do |t|
      t.string :id
      t.string :uuid
      t.string :name
      t.string :mime_type
      t.string :type
      t.string :url
      t.string :thumb_url
      t.boolean :is_video
      t.string :created_at

      t.timestamps
    end

    create_table "post".pluralize.to_sym, id: false do |t|
      t.integer :id
      t.string :uuid
      t.string :status
      t.string :accounts
      t.string :versions
      t.string :tags
      t.string :user
      t.string :scheduled_at
      t.string :published_at
      t.string :created_at
      t.boolean :trashed

      t.timestamps
    end

    create_table "post_user".pluralize.to_sym, id: false do |t|
      t.string :name

      t.timestamps
    end

    create_table "queue_post_200_response".pluralize.to_sym, id: false do |t|
      t.boolean :success
      t.string :scheduled_at

      t.timestamps
    end

    create_table "schedule_post_request".pluralize.to_sym, id: false do |t|
      t.boolean :post_now

      t.timestamps
    end

    create_table "tag".pluralize.to_sym, id: false do |t|
      t.integer :id
      t.string :uuid
      t.string :name
      t.string :hex_color

      t.timestamps
    end

    create_table "update_post_request".pluralize.to_sym, id: false do |t|
      t.string :date
      t.string :time
      t.string :timezone
      t.string :accounts
      t.string :tags
      t.string :versions

      t.timestamps
    end

    create_table "update_tag_request".pluralize.to_sym, id: false do |t|
      t.string :name
      t.string :hex_color

      t.timestamps
    end

    create_table "version".pluralize.to_sym, id: false do |t|
      t.integer :account_id
      t.boolean :is_original
      t.string :content
      t.string :options

      t.timestamps
    end

    create_table "version_content".pluralize.to_sym, id: false do |t|
      t.string :body
      t.string :media
      t.string :url

      t.timestamps
    end

    create_table "version_options".pluralize.to_sym, id: false do |t|
      t.string :tiktok
      t.string :youtube
      t.string :linkedin
      t.string :mastodon
      t.string :instagram
      t.string :pinterest
      t.string :facebook_page

      t.timestamps
    end

    create_table "version_options_instagram".pluralize.to_sym, id: false do |t|
      t.string :type

      t.timestamps
    end

    create_table "version_options_linkedin".pluralize.to_sym, id: false do |t|
      t.string :visibility

      t.timestamps
    end

    create_table "version_options_mastodon".pluralize.to_sym, id: false do |t|
      t.boolean :sensitive

      t.timestamps
    end

    create_table "version_options_pinterest".pluralize.to_sym, id: false do |t|
      t.string :title
      t.string :link
      t.string :boards

      t.timestamps
    end

    create_table "version_options_pinterest_boards".pluralize.to_sym, id: false do |t|
      t.string :accounts_0

      t.timestamps
    end

    create_table "version_options_tiktok".pluralize.to_sym, id: false do |t|
      t.string :privacy_level
      t.string :allow_comments
      t.string :allow_duet
      t.string :allow_stitch
      t.string :content_disclosure
      t.string :brand_organic_toggle
      t.string :brand_content_toggle

      t.timestamps
    end

    create_table "version_options_tiktok_privacy_level".pluralize.to_sym, id: false do |t|
      t.boolean :account_0

      t.timestamps
    end

    create_table "version_options_youtube".pluralize.to_sym, id: false do |t|
      t.string :title
      t.string :status

      t.timestamps
    end

  end
end
